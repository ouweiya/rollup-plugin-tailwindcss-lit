{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,OAAO,MAAM,SAAS,CAAC;AAE9B,OAAO,aAAa,MAAM,qBAAqB,CAAC;AAChD,OAAO,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;AAEnD,MAAM,oBAAoB,GAAG,GAAW,EAAE;IACxC,MAAM,MAAM,GAAG,YAAY,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IAE1C,OAAO;QACL,IAAI,EAAE,+BAA+B;QACrC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE;YACtB,IAAI,MAAM,CAAC,EAAE,CAAC,EAAE;gBACd,MAAM,MAAM,GAAG,MAAM,aAAa,EAAE,CAAC;gBACrC,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE;oBACzD,IAAI,EAAE,EAAE;oBACR,EAAE,EAAE,EAAE;oBACN,GAAG,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE;iBAC1C,CAAC,CAAC;gBAEH,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;oBAC5B,IAAI,GAAG,CAAC,IAAI,KAAK,YAAY,EAAE;wBAC7B,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;qBAChC;gBACH,CAAC,CAAC,CAAC;gBAEH,MAAM,OAAO,GAAG,mDAAmD,MAAM,CAAC,GAAG,6BAA6B,CAAC;gBAC3G,OAAO;oBACL,IAAI,EAAE,OAAO;oBACb,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE;iBAC3B,CAAC;aACH;YACD,OAAO,IAAI,CAAC;QACd,CAAC;KACF,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,oBAAoB,CAAC","sourcesContent":["import postcss from 'postcss';\nimport type { Plugin, TransformResult } from 'rollup';\nimport postcssConfig from 'postcss-load-config';\nimport { createFilter } from '@rollup/pluginutils';\n\nconst pluginTailwindcssLit = (): Plugin => {\n  const filter = createFilter(['**/*.css']);\n\n  return {\n    name: 'rollup-plugin-tailwindcss-lit',\n    async transform(code, id): Promise<TransformResult> {\n      if (filter(id)) {\n        const config = await postcssConfig();\n        const result = await postcss(config.plugins).process(code, {\n          from: id,\n          to: id,\n          map: { inline: false, annotation: false },\n        });\n\n        result.messages.forEach(msg => {\n          if (msg.type === 'dependency') {\n            this.addWatchFile(msg['file']);\n          }\n        });\n\n        const csscode = `import { css } from 'lit';\\nconst styles = css\\`${result.css}\\`;\\nexport default styles;`;\n        return {\n          code: csscode,\n          map: result.map.toString(),\n        };\n      }\n      return null;\n    },\n  };\n};\n\nexport default pluginTailwindcssLit;\n"]}